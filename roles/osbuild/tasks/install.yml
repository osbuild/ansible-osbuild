---

- name: Enable fastestmirror on Fedora
  ini_file:
    path: /etc/dnf/dnf.conf
    section: main
    option: fastestmirror
    value: "1"
  when:
    - ansible_distribution == 'Fedora'

- name: Disable install_weak_deps on Fedora
  ini_file:
    path: /etc/dnf/dnf.conf
    section: main
    option: install_weak_deps
    value: "0"
  when:
    - ansible_distribution == 'Fedora'

- name: Ensure all packages are updated
  package:
    name: "*"
    state: latest
  register: package_updates
  until: package_updates is success
  retries: 5

- name: Install required packages
  package:
    name: "{{ required_packages }}"
  register: package_install
  until: package_install is success
  retries: 5
  tags:
    - always

- name: Set global gitconfig parameters
  git_config:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    scope: global
  loop:
    - name: user.name
      value: "Integration Testing"
    - name: user.email
      value: "nobody@redhat.com"

- name: Ensure cloned repo directories are completely clean
  file:
    path: "/opt/{{ item }}"
    state: absent
  loop:
    - osbuild
    - osbuild-composer

- name: Clone osbuild from GitHub
  git:
    repo: "{{ osbuild_repo | default('https://github.com/osbuild/osbuild') }}"
    dest: /opt/osbuild
    version: "{{ osbuild_version | default('master') }}"
    refspec: "{{ osbuild_ref | default('+refs/pull/*:refs/heads/*') }}"
    force: yes
    clone: yes
    update: yes
    track_submodules: no

- name: Clone osbuild-composer from GitHub
  git:
    repo: "{{ osbuild_composer_repo | default('https://github.com/osbuild/osbuild-composer') }}"
    dest: /opt/osbuild-composer
    version: "{{ osbuild_composer_version | default('master') }}"
    refspec: "{{ osbuild_composer_ref | default('+refs/pull/*:refs/heads/*') }}"
    force: yes
    clone: yes
    update: yes
    track_submodules: no

- name: Clone cockpit-composer from GitHub
  git:
    repo: "{{ cockpit_composer_repo | default('https://github.com/weldr/cockpit-composer') }}"
    dest: /opt/cockpit-composer
    version: "{{ cockpit_composer_version | default('master') }}"
    refspec: "{{ cockpit_composer_ref | default('+refs/pull/*:refs/heads/*') }}"
    force: yes
    clone: yes
    update: yes
    track_submodules: no

- name: Install build dependencies
  command: |
    dnf -y builddep \
      /opt/osbuild-composer/osbuild-composer.spec \
      /opt/osbuild/osbuild.spec
  args:
    warn: no
  register: composer_builddep
  until: composer_builddep is success
  retries: 5
  changed_when: "'Nothing to do' in composer_builddep.stdout"

- name: Build RPMs
  command: make -C "{{ item.dir }}" rpm
  args:
    chdir: "{{ item.dir }}"
  loop:
    - project: osbuild
      dir: /opt/osbuild
    - project: osbuild-composer
      dir: /opt/osbuild-composer
    - project: cockpit-composer
      dir: /opt/cockpit-composer
  loop_control:
    label: "{{ item.project }}"
  register: rpm_build
  async: 300
  poll: 0
  changed_when: true

- name: Wait for builds to finish
  async_status:
    jid: "{{ async_result_item.ansible_job_id }}"
  loop: "{{ rpm_build.results }}"
  loop_control:
    loop_var: "async_result_item"
  register: async_poll_results
  until: async_poll_results.finished
  retries: 60
  delay: 10

- name: Get a list of RPMs built for osbuild
  command: "find /opt/osbuild/rpmbuild/RPMS/ -name '*.rpm'"
  register: osbuild_packages
  changed_when: false

- name: Get a list of RPMs built for osbuild-composer
  command: "find /opt/osbuild-composer/rpmbuild/RPMS/ -name '*.rpm'"
  register: composer_packages
  changed_when: false

- name: Get a list of RPMs built for cockpit-composer
  command: "find /opt/cockpit-composer/ -name '*.rpm'"
  register: cockpit_packages
  changed_when: false

- name: Gather a list of currently installed packages
  command: rpm -qa
  args:
    warn: no
  register: packages_installed
  changed_when: false

- name: Disable services before removing old packages
  service:
    name: "{{ item }}"
    state: stopped
    enabled: no
  loop:
    - cockpit.socket
    - osbuild-composer.socket
    - osbuild-rcm.socket
  when:
    - '"osbuild" in packages_installed.stdout_lines'

- name: Remove the currently installed packages
  package:
    name:
      - cockpit-composer
      - "osbuild-composer*"
      - "osbuild*"
      - "python3-osbuild"
    state: absent
  when:
    - '"osbuild" in packages_installed.stdout_lines'

- name: List packages to be installed
  debug:
    msg: "{{ composer_packages.stdout_lines + osbuild_packages.stdout_lines + cockpit_packages.stdout_lines }}"

- name: Install RPMs
  package:
    name: "{{ composer_packages.stdout_lines + osbuild_packages.stdout_lines + cockpit_packages.stdout_lines }}"
    state: latest
  changed_when: true

- name: Force upgrade the cockpit-composer RPM
  command: "rpm -Uvh --force {{ item }}"
  args:
    warn: no
  loop: "{{ cockpit_packages.stdout_lines }}"
  changed_when: true

- name: Enable services
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - cockpit.socket
    - osbuild-rcm.socket
    - osbuild-composer.socket
